#%RAML 1.0
baseUri: https://johannesssf.github.io/aceleradev-final-project/docs/api.html #
title: central-errors
description: The Centrar Errors is a microservice responsible for storing and centralizing error messages for any equipment.
securitySchemes:
  JWT:
    description: Autentication is done by using the token received when the user login and it must be informed when accessing the protected resources from the system.
    type: x-jwt
    describedBy:
      headers:
        Authorization:
          description:  X-AuthToken
          type: string
          required: true
          pattern: ^Token .+$

types:
  Email:
    description: Email field.
    type: string
    maxLength: 254
    pattern: ^.+@.+\..+$

  Password:
    description: Password field.
    type: string
    minLength: 8
    maxLength: 50

  IPv4:
    description: IPv4 address.
    type: string
    minLength: 7
    maxLength: 15
    pattern: ^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$

  LogLevel:
    description: Available criticality levels.
    type: string
    maxLength: 10
    enum: [critical, debug, error, warning, info]

  String30:
    type: string
    maxLength: 30

  String200:
    type: string
    maxLength: 200

  User:
    description: Central Errors users.
    type: object
    properties:
      username: Email
      password: Password
    example:
      username: john@email.com
      password: asdf1234

  Record:
    description: Record storaged in central errors. All records will respect the same pattern.
    type: object
    properties:
      environment: String30
      level: LogLevel
      message: String200
      origin: IPv4
      events: integer
      date: datetime
      is_archived: boolean
      user_id: integer
    example:
      environment: Production
      level: debug
      message: Record message
      origin: 1.1.1.1
      events: 200
      date: 2020-02-27T00:00:00Z
      is_archived: true
      user_id: 1

/api/auth/token/:
  post:
    description: User authentication used to access the resources.
    body:
      application/json:
        type: User
    responses:
      200:
        body:
          application/json:
            example:
              {
                "token": "e6223ae4a109705437fe69263dfb7ad3"
              }
      400:
        body:
          application/json:
            examples:
              invalid_fields:
                {
                  "username": [
                     "This field is required."
                  ],
                  "password": [
                    "This field is required."
                  ]
                }
              invalid_credentials:
                {
                  "message": "Unable to log in with provided credentials."
                }

/api/users/:
  description: Collection of system users.
  securedBy: [JWT]
  get:
    description: Collection of all users.
    responses:
      200:
        body:
          application/json:
            example:
              [
                {
                  "id": 1,
                  "username": 'john@email.com',
                  "password": "abcdedegadfadf"
                },
                {
                  "id": 2,
                  "username": "mary@email.com",
                  "password": "abcdedegadfadf"
                },
                {
                  "id": 3,
                  "username": "beth@email.com",
                  "password": "abcdedegadfadf"
                }
              ]
      401:
        body:
          application/json:
            examples:
              unalthenticated:
                {
                  "message": "Authentication credentials were not provided."
                }
              invalid:
                {
                  "message": "Invalid token."
                }
  post:
    body:
      application/json:
        type: User
    responses:
      201:
        body:
          application/json:
            example:
              {
                "id": 1,
                "username": "john@email.com",
                "password": "hashed-password"
              }
      400:
        body:
          application/json:
            examples:
              required_fields:
                {
                  "username": [
                      "This field is required."
                  ],
                  "password": [
                      "This field is required."
                  ]
                }
              existent_user:
                {
                  "username": [
                      "A user with that username already exists."
                  ]
                }
      401:
        body:
          application/json:
            examples:
              unalthenticated:
                {
                  "message": "Authentication credentials were not provided."
                }
              invalid:
                {
                  "message": "Invalid token."
                }
  /{id}/:
    securedBy: [JWT]
    uriParameters:
      id: integer
    get:
      description: Get information of an system user.
      responses:
        200:
          body:
            application/json:
              example:
                {
                  "id": 111,
                  "username": "john@email.com",
                  "password": "hashed-password"
                }
        401:
          body:
            application/json:
              examples:
                unalthenticated:
                  {
                    "message": "Authentication credentials were not provided."
                  }
                expired:
                  {
                    "message": "Invalid token."
                  }
        404:
          body:
            application/json:
              example:
                {
                  "message": "Not found."
                }
    delete:
      description: Delete an system user.
      responses:
        204:
          description: No returned message.
        401:
          body:
            application/json:
              examples:
                unalthenticated:
                  {
                    "message": "Authentication credentials were not provided."
                  }
                expired:
                  {
                    "message": "Invalid token."
                  }
        404:
          body:
            application/json:
              example:
                {
                  "message": "Not found."
                }

/api/records/:
  description: Collection of system records.
  securedBy: [JWT]
  get: # use some kind of filter
    description: List of all records available, optionally filtered.
    responses:
      200:
        body:
          application/json:
            example:
              [
                {
                  "id": 1,
                  "environment": "Production",
                  "level": "warning",
                  "message": "User authentication failed 3x",
                  "origin": 1.1.1.1,
                  events: 100,
                  "date": 2020-03-05T23:56:19,
                  "is_archived": false,
                  "user_id": 1
                },
                {
                  "id": 2,
                  "environment": "Production",
                  "level": "error",
                  "message": "Unreconized user credential - Peter",
                  "origin": 2.2.2.2,
                  events: 50,
                  "date": 2020-03-05T23:56:19,
                  "is_archived": false,
                  "user_id": 1
                },
                {
                  "id": 350,
                  "environment": "Homolog",
                  "level": "debug",
                  "message": "Preparing file to download",
                  "origin": 3.3.3.3,
                  events: 100,
                  "date": 2020-02-25T13:26:19,
                  "is_archived": false,
                  "user_id": 1
                }
              ]
      401:
          body:
            application/json:
              examples:
                unalthenticated:
                  {
                    "message": "Authentication credentials were not provided."
                  }
                expired:
                  {
                    "message": "Invalid token."
                  }
  post:
    description: Create a new record in the system.
    body:
      application/json:
        type: Record
    responses:
      201:
        body:
          application/json:
            example:
              {
                "id": 11,
                "environment": "Production",
                "level": "debug",
                "message": "some warning message",
                "origin": "192.168.0.222",
                "date": "2020-04-01T11:54:37-03:00",
                "is_archived": false,
                "events": 100,
                "user_id": 1
              }
      400:
        body:
          application/json:
            examples:
              missing_fields:
                {
                  "environment": [
                      "This field is required."
                  ],
                  "level": [
                      "This field is required."
                  ],
                  "message": [
                      "This field is required."
                  ],
                  "origin": [
                      "This field is required."
                  ],
                  "date": [
                      "This field is required."
                  ],
                  "is_archived": [
                      "This field is required."
                  ],
                  "events": [
                    "This field is required."
                  ],
                  "user_id": [
                      "This field is required."
                  ]
                }
              invalid_user:
                {
                  "user_id": [
                      "Invalid pk \"1000\" - object does not exist."
                  ]
                }
      401:
        body:
          application/json:
            examples:
              unalthenticated:
                {
                  "message": "Authentication credentials were not provided."
                }
              expired:
                {
                  "message": "Invalid token."
                }
  /{id}/:
    securedBy: [JWT]
    uriParameters:
      id: integer
    get:
        description: Get information of a record.
        responses:
          200:
            body:
              application/json:
                example:
                  {
                    "id": 1,
                    "environment": "Production",
                    "level": "warning",
                    "message": "User authentication failed 3x",
                    "origin": 1.1.1.1,
                    "date": 2020-03-05T23:56:19,
                    "events": 100,
                    "is_archived": false
                  }
          401:
            body:
              application/json:
                examples:
                  unalthenticated:
                    {
                      "message": "Authentication credentials were not provided."
                    }
                  expired:
                    {
                      "message": "Invalid token."
                    }
          404:
            body:
              application/json:
                example:
                  {
                    "message": "Not found."
                  }
    put:
      description: Full update, all fields are mandatory.
      body:
        application/json:
          properties:
            environment: String30
            level: LogLevel
            message: String200
            origin: IPv4
            date: datetime
            events: integer
            is_archived: boolean
            user_id: integer
          example:
            {
              "environment": "Production",
              "level": "debug",
              "message": "Record message",
              "origin": "1.1.1.1",
              "date": 2020-02-27T00:00:00Z,
              "events": 200,
              "is_archived": true,
              "user_id": 1
            }
      responses:
        200:
          body:
            application/json:
              example:
                {
                  "id": 1,
                  "environment": "Updated env",
                  "level": "debug",
                  "message": "Updated message",
                  "origin": "172.169.0.52",
                  "date": "2020-07-17T10:55:54.805566-03:00",
                  "is_archived": true,
                  "events": 100,
                  "user_id": 1
                }
        400:
          body:
            application/json:
              examples:
                invalid_field_content:
                  {
                    "level": [
                        "\"invalid\" is not a valid choice."
                      ],
                    "origin": [
                        "Enter a valid IPv4 address."
                      ],
                    "user_id": [
                        "Invalid pk \"1000\" - object does not exist."
                      ]
                  }
                missing_fields:
                  {
                    "environment": [
                        "This field is required."
                      ],
                    "level": [
                        "This field is required."
                      ],
                    "message": [
                        "This field is required."
                      ],
                    "origin": [
                        "This field is required."
                      ],
                    "date": [
                        "This field is required."
                      ],
                    "is_archived": [
                        "This field is required."
                      ],
                    "events": [
                        "This field is required."
                      ],
                    "user_id": [
                        "This field is required."
                      ]
                  }
        401:
          body:
            application/json:
              examples:
                unalthenticated:
                  unalthenticated:
                    {
                      "message": "Authentication credentials were not provided."
                    }
                  expired:
                    {
                      "message": "Invalid token."
                    }
        404:
            body:
              application/json:
                example:
                  {
                    "message": "Not found."
                  }
    patch:
      description: Partial update.
      body:
        application/json:
          properties:
            environment?: String30
            level?: LogLevel
            message?: String200
            origin?: IPv4
            date?: datetime
            events?: integer
            is_archived?: boolean
            user_id?: integer
          example:
            {
              "environment": "Production",
              "level": "debug",
              "message": "Record message",
              "origin": "1.1.1.1",
              "date": 2020-02-27T00:00:00Z,
              "is_archived": true
            }
      responses:
        200:
          body:
            application/json:
              example:
                {
                  "id": 1,
                  "environment": "Updated env",
                  "level": "debug",
                  "message": "Updated message",
                  "origin": "172.169.0.52",
                  "date": "2020-07-17T10:55:54.805566-03:00",
                  "is_archived": true,
                  "user_id": 20
                }
        400:
          body:
            application/json:
              examples:
                invalid_level:
                  {
                    "level":[
                      "\"invalid\" is not a valid choice."
                    ]
                  }
                invalid_origin_invalid_user:
                  {
                    "origin": [
                      "Enter a valid IPv4 address."
                    ],
                    "user_id": [
                      "Invalid pk \"1000\" - object does not exist."
                    ]
                  }
        401:
          body:
            application/json:
              examples:
                unalthenticated:
                  {
                    "message": "Authentication credentials were not provided."
                  }
                expired:
                  {
                    "message": "Invalid token."
                  }
        404:
            body:
              application/json:
                example:
                  {
                    "message": "Not found."
                  }
    delete:
      responses:
        204:
          description: No returned message.
        401:
          body:
            application/json:
              examples:
                unalthenticated:
                  {
                    "message": "Authentication credentials were not provided."
                  }
                expired:
                  {
                    "message": "Invalid token."
                  }
        404:
            body:
              application/json:
                example:
                  {
                    "message": "Not found."
                  }
